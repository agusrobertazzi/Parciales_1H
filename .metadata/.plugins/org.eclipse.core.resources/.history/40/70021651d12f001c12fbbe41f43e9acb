#include "menu.h"

void initMenu(void)
{
	Salon salon[SALONES_LEN];
	Arcade arcade[ARCADE_LEN];
	int option;
	int subOption;
	int contSalon = 0;
	int contArcade = 0;
	int id;
	int pos;

	puts("--------------------------------------");
	puts("BIENVENIDO AL PROGRAMA");
	puts("--------------------------------------");
	puts("");
	puts("");

	initSalon(salon, SALONES_LEN);
	initArcade(arcade, ARCADE_LEN);

	do
	{

		// Comienza menú
		puts("--------------------------------------");
		puts("1. ALTA DE SALÓN");
		puts("2. ELIMINAR SALÓN");
		puts("3. IMPRIMIR SALONES");
		puts("4. ALTA DE ARCADE");
		puts("5. EDITAR ARCADE");
		puts("6. ELIMINAR ARCADE");
		puts("7. IMRPIMIR ARCADES");
		puts("8. IMPRIMIR JUEGOS");
		puts("9. MENÚ DE INFORMES");
		puts("10. SALIR");
		puts("--------------------------------------");

		ingresoIntMinMax(&option, "Ingrese opción: ", "Número no válido. Ingrese nuevamente: ", 1, 10);
		// Cierre de menú

		switch(option)
		{
		case 1:
			if(contSalon < SALONES_LEN)
			{
				if(addSalon(salon, SALONES_LEN) != FALSE)
				{
					contSalon++;
					puts("--------------------------------------");
					puts("¡Salón agregado con éxito!");
					puts("--------------------------------------");
				}
				else
				{
					puts("--------------------------------------");
					puts("¡Algo salió mal!");
					puts("--------------------------------------");
				}
			}
			else
			{
				puts("--------------------------------------");
				puts("¡Ya no puedes agregar más salones!");
				puts("--------------------------------------");
			}
			break;
		case 2:
			if(contSalon > 0)
			{
				printSalon(salon, SALONES_LEN);
				id = ingresoInt("Ingrese el ID del salón que desea eliminar: ", "Número no válido. Ingrese nuevamente: ");
				pos = findSalonById(salon, SALONES_LEN, id);

				if(deleteSalon(salon, SALONES_LEN, pos, arcade, ARCADE_LEN) != FALSE)
				{
					contSalon--;
					puts("--------------------------------------");
					puts("¡Salón eliminado con éxito!");
					puts("--------------------------------------");
				}
				else
				{
					puts("--------------------------------------");
					puts("¡Algo salió mal!");
					puts("--------------------------------------");
				}
			}
			else
			{
				puts("--------------------------------------");
				puts("¡No hay salones que eliminar!");
				puts("--------------------------------------");
			}
			break;
		case 3:
			if(contSalon > 0)
			{
				if(printSalon(salon, SALONES_LEN) != FALSE)
				{
					puts("--------------------------------------");
					puts("¡Impresión finalizada!");
					puts("--------------------------------------");
				}
				else
				{
					puts("--------------------------------------");
					puts("¡Algo salió mal!");
					puts("--------------------------------------");
				}
			}
			else
			{
				puts("--------------------------------------");
				puts("¡No hay salones que mostrar!");
				puts("--------------------------------------");
			}
			break;
		case 4:
			if(contArcade < ARCADE_LEN)
			{
				if(addArcade(arcade, ARCADE_LEN, salon, SALONES_LEN) != FALSE)
				{
					contArcade++;
					puts("--------------------------------------");
					puts("¡Arcade agregado con éxito!");
					puts("--------------------------------------");
				}
				else
				{
					puts("--------------------------------------");
					puts("¡Algo salió mal!");
					puts("--------------------------------------");
				}
			}
			else
			{
				puts("--------------------------------------");
				puts("¡Ya no puedes agregar más arcades!");
				puts("--------------------------------------");
			}
			break;
		case 5:
			if(contArcade > 0)
			{
				printArcades(arcade, ARCADE_LEN);
				id = ingresoInt("Ingrese el ID del arcade que desea modificar: ", "Número no válido. Ingrese nuevamente: ");
				pos = findArcadeByID(arcade, ARCADE_LEN, pos);

				if(modifyArcade(arcade, ARCADE_LEN, pos) != FALSE)
				{
					puts("--------------------------------------");
					puts("¡Modificación realizada con éxito!");
					puts("--------------------------------------");
				}
				else
				{
					puts("--------------------------------------");
					puts("¡Algo salió mal!");
					puts("--------------------------------------");
				}
			}
			else
			{
				puts("--------------------------------------");
				puts("¡No hay arcades que modificar!");
				puts("--------------------------------------");
			}
			break;
		case 6:
			if(contArcade > 0)
			{
				printArcades(arcade, ARCADE_LEN);
				id = ingresoInt("Ingrese el ID del arcade que desea eliminar: ", "Número no válido. Ingrese nuevamente: ");
				pos = findArcadeByID(arcade, ARCADE_LEN, pos);

				if(deleteArcade(arcade, ARCADE_LEN, pos) != FALSE)
				{
					contArcade--;
					puts("--------------------------------------");
					puts("¡Arcade eliminado con éxito!");
					puts("--------------------------------------");
				}
				else
				{
					puts("--------------------------------------");
					puts("¡Algo salió mal!");
					puts("--------------------------------------");
				}
			}
			else
			{
				puts("--------------------------------------");
				puts("¡No hay arcades que eliminar!");
				puts("--------------------------------------");
			}
			break;
		case 7:
			if(contArcade > 0)
			{
				if(printArcades(arcade, ARCADE_LEN) != FALSE)
				{
					puts("--------------------------------------");
					puts("¡Fin de la impresión!");
					puts("--------------------------------------");
				}
				else
				{
					puts("--------------------------------------");
					puts("¡Algo salió mal!");
					puts("--------------------------------------");
				}
			}
			else
			{
				puts("--------------------------------------");
				puts("¡No hay arcades que imprimir!");
				puts("--------------------------------------");
			}
			break;
		case 8:
			if(contArcade > 0)
			{
				if(printGames(arcade, ARCADE_LEN) != FALSE)
				{
					puts("--------------------------------------");
					puts("¡Fin de la impresión!");
					puts("--------------------------------------");
				}
				else
				{
					puts("--------------------------------------");
					puts("¡Algo salió mal!");
					puts("--------------------------------------");
				}
			}
			else
			{
				puts("--------------------------------------");
				puts("¡No hay juegos cargados que imprimir!");
				puts("--------------------------------------");
			}
			break;
		case 9:
			puts("--------------------------------------");
			puts("1. Listar los salones con más de 4 arcades");
			puts("2. Listar los arcades para más de 2 jugadores");
			puts("3. Listar toda la información de un salón en específico ");
			puts("4. Listar todos los arcades de un salón determinado");
			puts("5. Imprimir el salón con más cantidad de arcades");
			puts("6. Imprimir el monto máximo en pesos que puede recaudar un salón");
			puts("7. ¿Cuantos arcades tiene un juego?");
			puts("--------------------------------------");

			ingresoIntMinMax(&subOption, "Ingrese opción: ", "Número no válido. Ingrese nuevamente: ", 1, 7);

			switch(subOption)
			{
			case 1:
				if(contSalon > 0)
				{
					if(informeCuatroArcades(salon, SALONES_LEN, arcade, ARCADE_LEN) != FALSE)
					{
						puts("--------------------------------------");
						puts("¡Impresión finalizada!");
						puts("--------------------------------------");
					}
					else
					{
						puts("--------------------------------------");
						puts("¡Algo salió mal!");
						puts("--------------------------------------");
					}
				}
				else
				{
					puts("--------------------------------------");
					puts("¡No hay salones cargados!");
					puts("--------------------------------------");
				}
				break;
			case 2:
				if(contArcade > 0)
				{
					if(arcadeDosJugadores(arcade, ARCADE_LEN, salon, SALONES_LEN) != FALSE)
					{
						puts("--------------------------------------");
						puts("¡Impresión finalizada!");
						puts("--------------------------------------");
					}
				}
				break;
			}

			break;
		case 10:
			puts("--------------------------------------");
			puts("Saliendo... por favor espere.");
			puts("--------------------------------------");
			break;
		}


	}while(option != 10);

	puts("");
	puts("");
	puts("--------------------------------------");
	puts("GRACIAS POR USAR EL PROGRAMA");
	puts("--------------------------------------");

}

void initSubMenu(void)
{

}


