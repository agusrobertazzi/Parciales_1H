#include "abmSalonArcade.h"

static int getNewIdArcade(void)
{
	static int counter = 0;

	return(counter++);
}

int addArcade(Arcade* listArcade, int lenArcade, Salon* listSalon, int lenSalon)
{
	int status = FALSE;
	int i;

	if(listArcade != NULL && lenArcade > 0 && listSalon != NULL && lenSalon > 0)
	{
		for(i = 0; i < lenArcade; i++)
		{
			if(listArcade[i].isEmpty == TRUE)
			{
				status = TRUE;
				listArcade[i].isEmpty = FALSE;
				listArcade[i].id = getNewIdArcade();
				ingresoCadena(listArcade[i].country, 100, "Ingrese nacionalidad del arcade: ", "Error. Ingrese nuevamente: ");
				ingresoIntMinMax(&listArcade[i].type, "Ingrese el sonido del arcade\n0. Mono\n1. Esteréo\n", "Error. Numero no válido: ", 0, 1);
				ingresoIntMinMax(&listArcade[i].players, "¿Cuantos jugadores tiene el arcade? Máximo 6: ", "Error. Número no válido: ", 1, 6);
				listArcade[i].maxAmount = ingresoInt("¿Cuantas fichas tiene el arcade?: ", "Error. No válido: ");
				while(listArcade[i].maxAmount < 1)
				{
					listArcade[i].maxAmount = ingresoInt("No debe ser número negativo: ", "Error. No válido: ");
				}
				printSalon(listSalon, lenSalon);
				listArcade[i].idSalon = ingresoInt("¿A qué salón pertenece este arcade?: ", "Error. No válido: ");
				while(findSalonById(listSalon, lenSalon, listArcade[i].idSalon) == FALSE)
				{
					listArcade[i].idSalon = ingresoInt("El salón no exíste. Ingrese otro ID: ", "Error. No válido: ");
				}
				ingresoCadena(listArcade[i].gameName, 63, "¿Cómo se llama el juego de este arcade?", "Error. Ingrese nuevamente: ");

				break;
			}
		}
	}

	return status;
}

int deleteSalon(Salon* listSalon, int lenSalon, int id, Arcade* listArcade, int lenArcade)
{
	int status = FALSE;
	int i;
	int cont;

	if(listSalon != NULL && lenSalon > 0 && listArcade != NULL && lenArcade > 0 && id != FALSE)
	{
		listSalon[id].isEmpty = TRUE;

		for(i = 0; i < lenArcade; i++)
		{
			if(listArcade[i].isEmpty == FALSE && listArcade[i].idSalon == id)
			{
				listArcade[i].isEmpty = TRUE;
			}
		}

		status = cont;
	}

	return status;
}


